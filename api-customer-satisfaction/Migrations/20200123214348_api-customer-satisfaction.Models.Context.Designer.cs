// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_customer_satisfaction.Models;

namespace api_customer_satisfaction.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200123214348_api-customer-satisfaction.Models.Context")]
    partial class apicustomersatisfactionModelsContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("api_customer_satisfaction.Models.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("EvaluationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Qualification")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Evaluations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ryesquen@gmail.com",
                            EvaluationDate = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Renzo",
                            LastName = "Yesquén Herrera",
                            Qualification = 10
                        },
                        new
                        {
                            Id = 2,
                            Email = "nayeska.gonzales@gmail.com",
                            EvaluationDate = new DateTime(2019, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nayeska",
                            LastName = "Gonzales Mauricio",
                            Qualification = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
